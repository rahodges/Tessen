using System;
using System.Data;
using System.Web.UI;
using System.ComponentModel;
using ComponentArt.Web.UI;
using System.Web.UI.WebControls;
using Amns.Rappahanock;
using Amns.GreyFox.Web.UI.WebControls;

namespace Amns.Tessen.Web.UI.WebControls
{
	/// <summary>
	/// Default web editor for DojoSeminarOption.
	/// </summary>
	[ToolboxData("<{0}:DojoSeminarOptionEditor runat=server></{0}:DojoSeminarOptionEditor>")]
	public class DojoSeminarOptionEditor : System.Web.UI.WebControls.WebControl, INamingContainer
	{
		private int dojoSeminarOptionID;
		private DojoSeminarOption obj;
		private bool loadFlag = false;
		private bool resetOnAdd;
		private bool editOnAdd;

		protected ComponentArt.Web.UI.TabStrip tabstrip;
		protected ComponentArt.Web.UI.MultiPage multipage;
		protected Literal headerText;

		#region Private Control Fields for Default Folder

		protected ComponentArt.Web.UI.PageView DefaultView;
		private TextBox tbName;
		private TextBox tbDescription;
		private TextBox tbFee;
		private TextBox tbMaxQuantity;
		private RegularExpressionValidator revMaxQuantity;

		#endregion

		#region Private Control Fields for _system Folder

		protected ComponentArt.Web.UI.PageView _systemView;

		#endregion

		#region Private Control Fields for Rappahanock Folder

		protected ComponentArt.Web.UI.PageView RappahanockView;
		private ComponentArt.Web.UI.ComboBox comboItem;

		#endregion

		private Button btOk;
		private Button btCancel;
		private Button btDelete;

		#region Public Control Properties

		[Bindable(true), Category("Data"), DefaultValue(0)]
		public int DojoSeminarOptionID
		{
			get
			{
				return dojoSeminarOptionID;
			}
			set
			{
				loadFlag = true;
				dojoSeminarOptionID = value;
			}
		}

		[Bindable(true), Category("Behavior"), DefaultValue(false)]
		public bool ResetOnAdd
		{
			get
			{
				return resetOnAdd;
			}
			set
			{
				resetOnAdd = value;
			}
		}

		[Bindable(true), Category("Behavior"), DefaultValue(false)]
		public bool EditOnAdd
		{
			get
			{
				return editOnAdd;
			}
			set
			{
				editOnAdd = value;
			}
		}

		#endregion

		protected override void CreateChildControls()
		{
			Panel container = new Panel();
			container.CssClass = this.CssClass;
			Controls.Add(container);
			Panel header = new Panel();
			header.CssClass = "pHead";
			container.Controls.Add(header);
			headerText = new Literal();
			header.Controls.Add(headerText);
			Panel content = new Panel();
			content.CssClass = "pContent";
			container.Controls.Add(content);
			#region Tab Strip

			tabstrip = new ComponentArt.Web.UI.TabStrip();

			// Create the DefaultTabLook instance and add it to the ItemLooks collection
			ComponentArt.Web.UI.ItemLook defaultTabLook = new ComponentArt.Web.UI.ItemLook();
			defaultTabLook.LookId = "DefaultTabLook";
			defaultTabLook.CssClass = "DefaultTab";
			defaultTabLook.HoverCssClass = "DefaultTabHover";
			defaultTabLook.LabelPaddingLeft = Unit.Parse("10");
			defaultTabLook.LabelPaddingRight = Unit.Parse("10");
			defaultTabLook.LabelPaddingTop = Unit.Parse("5");
			defaultTabLook.LabelPaddingBottom = Unit.Parse("4");
			defaultTabLook.LeftIconUrl = "tab_left_icon.gif";
			defaultTabLook.RightIconUrl = "tab_right_icon.gif";
			defaultTabLook.HoverLeftIconUrl = "hover_tab_left_icon.gif";
			defaultTabLook.HoverRightIconUrl = "hover_tab_right_icon.gif";
			defaultTabLook.LeftIconWidth = Unit.Parse("3");
			defaultTabLook.LeftIconHeight = Unit.Parse("21");
			defaultTabLook.RightIconWidth = Unit.Parse("3");
			defaultTabLook.RightIconHeight = Unit.Parse("21");
			tabstrip.ItemLooks.Add(defaultTabLook);

			// Create the SelectedTabLook instance and add it to the ItemLooks collection
			ComponentArt.Web.UI.ItemLook selectedTabLook = new ComponentArt.Web.UI.ItemLook();
			selectedTabLook.LookId = "SelectedTabLook";
			selectedTabLook.CssClass = "SelectedTab";
			selectedTabLook.LabelPaddingLeft = Unit.Parse("10");
			selectedTabLook.LabelPaddingRight = Unit.Parse("10");
			selectedTabLook.LabelPaddingTop = Unit.Parse("5");
			selectedTabLook.LabelPaddingBottom = Unit.Parse("4");
			selectedTabLook.LeftIconUrl = "selected_tab_left_icon.gif";
			selectedTabLook.RightIconUrl = "selected_tab_right_icon.gif";
			selectedTabLook.LeftIconWidth = Unit.Parse("3");
			selectedTabLook.LeftIconHeight = Unit.Parse("21");
			selectedTabLook.RightIconWidth = Unit.Parse("3");
			selectedTabLook.RightIconHeight = Unit.Parse("21");
			tabstrip.ItemLooks.Add(selectedTabLook);

			tabstrip.ID = this.ID + "_TabStrip";
			tabstrip.CssClass = "TopGroup";
			tabstrip.DefaultItemLookId = "DefaultTabLook";
			tabstrip.DefaultSelectedItemLookId = "SelectedTabLook";
			tabstrip.DefaultGroupTabSpacing = 1;
			tabstrip.ImagesBaseUrl = "tabstrip_images/";
			tabstrip.MultiPageId = this.ID + "_MultiPage";
			content.Controls.Add(tabstrip);

			#endregion

			#region MultiPage

			multipage = new ComponentArt.Web.UI.MultiPage();
			multipage.ID = this.ID + "_MultiPage";
			multipage.CssClass = "MultiPage";
			content.Controls.Add(multipage);

			#endregion

			#region Child Controls for Default Folder

			DefaultView = new ComponentArt.Web.UI.PageView();
			DefaultView.CssClass = "PageContent";
			multipage.PageViews.Add(DefaultView);

			TabStripTab DefaultTab = new TabStripTab();
			DefaultTab.Text = "Default";
			DefaultTab.PageViewId = DefaultView.ID;
			tabstrip.Tabs.Add(DefaultTab);

			DefaultView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			DefaultView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">Name</span>"));
			DefaultView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			tbName = new TextBox();
			tbName.EnableViewState = false;
			DefaultView.Controls.Add(tbName);
			DefaultView.Controls.Add(new LiteralControl("</span></div>"));

			DefaultView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			DefaultView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">Description</span>"));
			DefaultView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			tbDescription = new TextBox();
			tbDescription.EnableViewState = false;
			DefaultView.Controls.Add(tbDescription);
			DefaultView.Controls.Add(new LiteralControl("</span></div>"));

			DefaultView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			DefaultView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">Fee</span>"));
			DefaultView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			tbFee = new TextBox();
			tbFee.EnableViewState = false;
			DefaultView.Controls.Add(tbFee);
			DefaultView.Controls.Add(new LiteralControl("</span></div>"));

			DefaultView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			DefaultView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">MaxQuantity</span>"));
			DefaultView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			tbMaxQuantity = new TextBox();
			tbMaxQuantity.ID = this.ID + "_MaxQuantity";
			tbMaxQuantity.EnableViewState = false;
			DefaultView.Controls.Add(tbMaxQuantity);
			revMaxQuantity = new RegularExpressionValidator();
			revMaxQuantity.ControlToValidate = tbMaxQuantity.ID;
			revMaxQuantity.ValidationExpression = "^(\\+|-)?\\d+$";
			revMaxQuantity.ErrorMessage = "*";
			revMaxQuantity.Display = ValidatorDisplay.Dynamic;
			revMaxQuantity.EnableViewState = false;
			DefaultView.Controls.Add(revMaxQuantity);
			DefaultView.Controls.Add(new LiteralControl("</span></div>"));

			#endregion

			#region Child Controls for Rappahanock Folder

			RappahanockView = new ComponentArt.Web.UI.PageView();
			RappahanockView.CssClass = "PageContent";
			multipage.PageViews.Add(RappahanockView);

			TabStripTab RappahanockTab = new TabStripTab();
			RappahanockTab.Text = "Rappahanock";
			RappahanockTab.PageViewId = RappahanockView.ID;
			tabstrip.Tabs.Add(RappahanockTab);

			RappahanockView.Controls.Add(new LiteralControl("<div class=\"inputrow\">"));
			RappahanockView.Controls.Add(new LiteralControl("<span class=\"inputlabel\">Item</span>"));
			RappahanockView.Controls.Add(new LiteralControl("<span class=\"inputfield\">"));
			comboItem = new ComponentArt.Web.UI.ComboBox();
			comboItem.CssClass = "comboBox";
			comboItem.HoverCssClass = "comboBoxHover";
			comboItem.FocusedCssClass = "comboBoxHover";
			comboItem.TextBoxCssClass = "comboTextBox";
			comboItem.DropDownCssClass = "comboDropDown";
			comboItem.ItemCssClass = "comboItem";
			comboItem.ItemHoverCssClass = "comboItemHover";
			comboItem.SelectedItemCssClass = "comboItemHover";
			comboItem.DropHoverImageUrl = "images/drop_hover.gif";
			comboItem.DropImageUrl = "images/drop.gif";
			comboItem.Width = Unit.Pixel(300);
			RappahanockView.Controls.Add(comboItem);
			RappahanockView.Controls.Add(new LiteralControl("</span></div>"));

			#endregion

			Panel buttons = new Panel();
			buttons.CssClass = "pButtons";
			content.Controls.Add(buttons);

			btOk = new Button();
			btOk.Text = "OK";
			btOk.Width = Unit.Pixel(72);
			btOk.EnableViewState = false;
			btOk.Click += new EventHandler(ok_Click);
			buttons.Controls.Add(btOk);

			btCancel = new Button();
			btCancel.Text = "Cancel";
			btCancel.Width = Unit.Pixel(72);
			btCancel.EnableViewState = false;
			btCancel.CausesValidation = false;
			btCancel.Click += new EventHandler(cancel_Click);
			buttons.Controls.Add(btCancel);

			btDelete = new Button();
			btDelete.Text = "Delete";
			btDelete.Width = Unit.Pixel(72);
			btDelete.EnableViewState = false;
			btDelete.Click += new EventHandler(delete_Click);
			buttons.Controls.Add(btDelete);

			bind();
			ChildControlsCreated = true;
		}

		private void bind()
		{
			#region Bind Rappahanock Child Data

			RHItemManager itemManager = new RHItemManager();
			RHItemCollection itemCollection = itemManager.GetCollection(string.Empty, string.Empty, null);
			ComponentArt.Web.UI.ComboBoxItem ItemNullItem = new ComponentArt.Web.UI.ComboBoxItem();
			ItemNullItem.Text = "Null";
			ItemNullItem.Value = "Null";
			comboItem.Items.Add(ItemNullItem);
			foreach(RHItem item in itemCollection)
			{
				ComponentArt.Web.UI.ComboBoxItem i = new ComponentArt.Web.UI.ComboBoxItem();
				i.Text = item.ToString();
				i.Value = item.ID.ToString();
				comboItem.Items.Add(i);
			}

			#endregion

		}

		#region Events

		protected void ok_Click(object sender, EventArgs e)
		{
			if(dojoSeminarOptionID == 0)
				obj = new DojoSeminarOption();
			else
				obj = new DojoSeminarOption(dojoSeminarOptionID);

			obj.Name = tbName.Text;
			obj.Description = tbDescription.Text;
			obj.Fee = decimal.Parse(tbFee.Text);
			obj.MaxQuantity = int.Parse(tbMaxQuantity.Text);
			if(comboItem.SelectedItem != null && comboItem.SelectedItem.Value != "Null")
				obj.Item = RHItem.NewPlaceHolder(
					int.Parse(comboItem.SelectedItem.Value));
			else
				obj.Item = null;

			if(editOnAdd)
				dojoSeminarOptionID = obj.Save();
			else
				obj.Save();

			if(resetOnAdd)
			{
				tbName.Text = string.Empty;
				tbDescription.Text = string.Empty;
				tbFee.Text = string.Empty;
				tbMaxQuantity.Text = string.Empty;
				msItem.SelectedIndex = 0;
			}

			OnUpdated(EventArgs.Empty);
		}

		protected void cancel_Click(object sender, EventArgs e)
		{
			this.OnCancelled(EventArgs.Empty);
		}

		protected void delete_Click(object sender, EventArgs e)
		{
			this.OnDeleteClicked(EventArgs.Empty);
		}

		public event EventHandler Cancelled;
		protected virtual void OnCancelled(EventArgs e)
		{
			if(Cancelled != null)
				Cancelled(this, e);
		}

		public event EventHandler Updated;
		protected virtual void OnUpdated(EventArgs e)
		{
			if(Updated != null)
				Updated(this, e);
		}

		public event EventHandler DeleteClicked;
		protected virtual void OnDeleteClicked(EventArgs e)
		{
			if(DeleteClicked != null)
			DeleteClicked(this, e);
		}

		#endregion

		protected override void OnPreRender(EventArgs e)
		{
			if(loadFlag)
			{
				if(dojoSeminarOptionID > 0)
				{
					obj = new DojoSeminarOption(dojoSeminarOptionID);
					headerText.Text = "Edit  - " + obj.ToString();
				}
				else if(dojoSeminarOptionID <= 0)
				{
					obj = new DojoSeminarOption();
					headerText.Text = "Add ";
				}

				// Bind Default Data
				tbName.Text = obj.Name;
				tbDescription.Text = obj.Description;
				tbFee.Text = obj.Fee.ToString();
				tbMaxQuantity.Text = obj.MaxQuantity.ToString();

				// Bind Rappahanock Data
				if(obj.Item != null)
					foreach(ListItem item in comboItem.Items)
						item.Selected = obj.Item.ID.ToString() == item.Value;
					else
						msItem.SelectedIndex = 0;
				tabstrip.SelectedTab = tabstrip.Tabs[0];
			}
		}

		protected override void LoadViewState(object savedState)
		{
			if(savedState != null)
			{
				object[] myState = (object[]) savedState;
				if(myState[0] != null)
					base.LoadViewState(myState[0]);
				if(myState[1] != null)
					dojoSeminarOptionID = (int) myState[1];
			}
		}

		protected override object SaveViewState()
		{
			object baseState = base.SaveViewState();
			object[] myState = new object[2];
			myState[0] = baseState;
			myState[1] = dojoSeminarOptionID;
			return myState;
		}
	}
}

